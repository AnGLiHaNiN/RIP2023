basePath: /
definitions:
  app.SwaggerUpdateMedicineRequest:
    properties:
      name:
        type: string
    type: object
  ds.Component:
    properties:
      amount:
        type: integer
      image_url:
        type: string
      name:
        type: string
      properties:
        type: string
      uuid:
        type: string
      world_name:
        type: string
    required:
    - amount
    - name
    - properties
    - world_name
    type: object
  repository.ComponentWithCount:
    properties:
      amount:
        type: integer
      count:
        type: integer
      image_url:
        type: string
      name:
        type: string
      properties:
        type: string
      uuid:
        type: string
      world_name:
        type: string
    required:
    - amount
    - name
    - properties
    - world_name
    type: object
  schemes.AllMedicinesResponse:
    properties:
      medicines:
        items:
          $ref: '#/definitions/schemes.MedicineOutput'
        type: array
    type: object
  schemes.AuthResp:
    properties:
      access_token:
        type: string
      token_type:
        type: string
    type: object
  schemes.ChangeCountReq:
    properties:
      count:
        type: integer
      uri:
        properties:
          componentId:
            type: string
        required:
        - componentId
        type: object
    required:
    - count
    type: object
  schemes.ChangeUserReq:
    properties:
      email:
        maxLength: 40
        type: string
      name:
        maxLength: 60
        type: string
      password:
        maxLength: 30
        type: string
    type: object
  schemes.GetAllComponentsResponse:
    properties:
      components:
        items:
          $ref: '#/definitions/ds.Component'
        type: array
      draft_medicine:
        type: string
    type: object
  schemes.LoginReq:
    properties:
      login:
        maxLength: 30
        type: string
      password:
        maxLength: 30
        type: string
    required:
    - login
    - password
    type: object
  schemes.MedicineOutput:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      customer:
        type: string
      formation_date:
        type: string
      moderator:
        type: string
      name:
        type: string
      status:
        type: string
      uuid:
        type: string
      verification_status:
        type: string
    type: object
  schemes.MedicineResponse:
    properties:
      components:
        items:
          $ref: '#/definitions/repository.ComponentWithCount'
        type: array
      medicine:
        $ref: '#/definitions/schemes.MedicineOutput'
    type: object
  schemes.RegisterReq:
    properties:
      login:
        maxLength: 30
        type: string
      password:
        maxLength: 30
        type: string
    required:
    - login
    - password
    type: object
host: 127.0.0.1:8000
info:
  contact: {}
  title: Medicines
  version: "1.0"
paths:
  /api/components:
    get:
      description: Возвращает все доступные компоненты с опциональной фильтрацией
        по Названию
      parameters:
      - description: Название для фильтрации
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.GetAllComponentsResponse'
      summary: Получить все компоненты
      tags:
      - Компоненты
  /api/components/:
    post:
      consumes:
      - multipart/form-data
      description: Добавить новый компонент
      parameters:
      - description: Изображение компонента
        in: formData
        name: image
        type: file
      - description: Название
        in: formData
        name: name
        required: true
        type: string
      - description: Всемирное наименование
        in: formData
        name: world_name
        required: true
        type: string
      - description: Количество
        in: formData
        name: amount
        required: true
        type: integer
      - description: Свойства
        in: formData
        name: properties
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            type: string
      summary: Добавить компонент
      tags:
      - Компоненты
  /api/components/{component_id}:
    delete:
      description: Удаляет лекраство по id
      parameters:
      - description: id компонента
        in: path
        name: component_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Удалить компонент
      tags:
      - Компоненты
    get:
      description: Возвращает более подробную информацию об одном компоненте
      parameters:
      - description: id компонента
        in: path
        name: component_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Component'
      summary: Получить один компонент
      tags:
      - Компоненты
    put:
      consumes:
      - multipart/form-data
      description: Изменить данные полей о компоненте
      parameters:
      - description: Идентификатор компонента
        in: path
        name: component_id
        required: true
        type: string
      - description: Название
        in: formData
        name: name
        type: string
      - description: Всемирное наименование
        in: formData
        name: world_name
        type: string
      - description: Количество
        in: formData
        name: amount
        type: integer
      - description: Изображение компоненты
        in: formData
        name: image
        type: file
      - description: Свойства
        in: formData
        name: properties
        type: string
      responses:
        "200":
          description: OK
      summary: Изменить компонент
      tags:
      - Компоненты
  /api/components/{component_id}/add_to_medicine:
    post:
      description: Добавить выбранный компонент в черновик лекарства
      parameters:
      - description: id компонента
        in: path
        name: component_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Добавить в компонент
      tags:
      - Компоненты
  /api/medicines:
    delete:
      description: Удаляет лекарство по id
      responses:
        "200":
          description: OK
      summary: Удалить лекарство
      tags:
      - Лекарства
    get:
      description: Возвращает все лекарства с фильтрацией по статусу и дате формирования
      parameters:
      - description: статус лекарствоа
        in: query
        name: status
        type: string
      - description: начальная дата формирования
        in: query
        name: formation_date_start
        type: string
      - description: конечная дата формирвания
        in: query
        name: formation_date_end
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.AllMedicinesResponse'
      summary: Получить все лекарства
      tags:
      - Лекарства
    put:
      description: Позволяет изменить название лекарства
      parameters:
      - description: Название лекарствоа
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/app.SwaggerUpdateMedicineRequest'
      responses:
        "200":
          description: OK
      summary: Указать название лекарства
      tags:
      - Лекарства
  /api/medicines/{medicine_id}:
    get:
      description: Возвращает подробную информацию о лекарстве и его названии
      parameters:
      - description: id лекарствоа
        in: path
        name: medicine_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.MedicineResponse'
      summary: Получить одно лекарство
      tags:
      - Лекарства
  /api/medicines/{medicine_id}/moderator_confirm:
    put:
      description: Подтвердить или отменить лекарство модератором
      parameters:
      - description: id лекарства
        in: path
        name: medicine_id
        required: true
        type: string
      - description: подтвердить
        in: body
        name: confirm
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
      summary: Подтвердить лекарство
      tags:
      - Лекарства
  /api/medicines/change_count/{component_id}:
    put:
      description: Позволяет изменить вес компонента в лекарстве
      parameters:
      - description: id компонента
        in: path
        name: component_id
        required: true
        type: string
      - description: Количество
        in: body
        name: count
        required: true
        schema:
          $ref: '#/definitions/schemes.ChangeCountReq'
      responses:
        "200":
          description: OK
      summary: Изменить вес компонента
      tags:
      - Лекарства
  /api/medicines/delete_component/{component_id}:
    delete:
      description: Удалить компонент из лекарства
      parameters:
      - description: id компонента
        in: path
        name: component_id
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Удалить компонент из лекарства
      tags:
      - Лекарства
  /api/medicines/user_confirm:
    put:
      description: Сформировать или удалить лекарство пользователем
      responses:
        "200":
          description: OK
      summary: Сформировать лекарство
      tags:
      - Лекарства
  /api/user:
    get:
      description: Получить информацию о профиле пользователя
      responses:
        "200":
          description: OK
      summary: Профиль
      tags:
      - Пользователь
    put:
      description: Изменить все или часть данных профиля пользователя
      parameters:
      - description: Новые значения
        in: body
        name: new_fields
        required: true
        schema:
          $ref: '#/definitions/schemes.ChangeUserReq'
      responses:
        "200":
          description: OK
      summary: Изменить профиль
      tags:
      - Пользователь
  /api/user/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя по логиню, паролю и отдаёт jwt токен для
        дальнейших запросов
      parameters:
      - description: login and password
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/schemes.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.AuthResp'
      summary: Авторизация
      tags:
      - Пользователь
  /api/user/loguot:
    get:
      description: Выход из аккаунта
      responses:
        "200":
          description: OK
      summary: Выйти из аккаунта
      tags:
      - Пользователь
  /api/user/sign_up:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя
      parameters:
      - description: login and password
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/schemes.RegisterReq'
      responses:
        "200":
          description: OK
      summary: Регистрация
      tags:
      - Пользователь
schemes:
- http
swagger: "2.0"
